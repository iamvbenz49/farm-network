generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Crop {
  id               Int     @id @default(autoincrement())
  name             String
  amount           Int
  landSpacing      Int
  farmerId         Int?
  jobId            Int?
  landId           Int?
  demandId         Int
  subType          String?
  description      String?
  assignmentStatus Boolean
  assignedAmount   Int     @default(0)
  Demand           Demand  @relation(fields: [demandId], references: [id])
  Farmer           Farmer? @relation(fields: [farmerId], references: [id])
  Job              Job?    @relation(fields: [jobId], references: [id])
  Land             Land?   @relation(fields: [landId], references: [id], map: "main_fk")
}

model Demand {
  id          Int        @id @default(autoincrement())
  deadline    DateTime?
  mrp         Float?
  msp         Float?
  isCompleted Boolean    @default(false)
  marketID    Int?
  Crop        Crop[]
  MarketMan   MarketMan? @relation(fields: [marketID], references: [id])
  Job         Job[]
  Vehicle     Vehicle[]  @relation("DemandToVehicle")
}

model Farmer {
  id           Int    @id @default(autoincrement())
  name         String
  gmail        String @unique
  credit_score Float?
  area         Float?
  password     String 
  Crop         Crop[]
  Job          Job[]
  Land         Land[]
}

model Job {
  id        Int       @id @default(autoincrement())
  startDate DateTime?
  endDate   DateTime?
  farmerId  Int
  demandId  Int
  Crop      Crop[]
  Demand    Demand    @relation(fields: [demandId], references: [id])
  Farmer    Farmer    @relation(fields: [farmerId], references: [id])
}

model Land {
  id           Int     @id @default(autoincrement())
  farmerId     Int
  area         Float
  filled       Boolean @default(false)
  assignedArea Float?
  Crop         Crop[]
  Farmer       Farmer  @relation(fields: [farmerId], references: [id])
}

model Vehicle {
  id          Int      @id @default(autoincrement())
  numberPlate String
  ownerName   String
  score       Int?
  Demand      Demand[] @relation("DemandToVehicle")
}

model MarketMan {
  id     Int      @id @default(autoincrement())
  name         String @default("temp")
  gmail        String @unique
  password     String @default("hell0")
  Demand Demand[]
}
