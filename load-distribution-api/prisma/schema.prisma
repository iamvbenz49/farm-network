generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Crop {
  id              Int     @id @default(autoincrement())
  name            String
  amount          Int
  landSpacing     Int
  farmerId        Int?
  jobId           Int?
  landId          Int?
  demandId        Int
  subType         String?
  description     String?
  assignmentStatus Boolean


  MainLand        Land?   @relation("planted", fields: [landId], references: [id], map: "main_fk")
  SuitableLand    Land?   @relation("suitable", fields: [landId], references: [id], map: "suitable_fk")

  Demand          Demand  @relation(fields: [demandId], references: [id])
  Farmer          Farmer? @relation(fields: [farmerId], references: [id])
  Job             Job?    @relation(fields: [jobId], references: [id])
}

model Demand {
  id       Int       @id @default(autoincrement())
  deadline DateTime?
  mrp      Float?
  msp      Float?
  Crop     Crop[]
  Job      Job[]
  Vehicle  Vehicle[]
}

model Farmer {
  id           Int    @id @default(autoincrement())
  name         String
  credit_score Float?
  area         Float?
  Crop         Crop[]
  Job          Job[]
  Land         Land[]
}

model Job {
  id        Int       @id @default(autoincrement())
  startDate DateTime?
  endDate   DateTime?
  farmerId  Int
  demandId  Int
  Crop      Crop[]
  Demand    Demand    @relation(fields: [demandId], references: [id])
  Farmer    Farmer    @relation(fields: [farmerId], references: [id])
}

model Land {
  id       Int    @id @default(autoincrement())
  farmerId Int
  area     Float
  filled   Boolean  @default(false)
  Crop     Crop[] @relation("planted")
  SuitableCrop Crop[] @relation("suitable")
  Farmer   Farmer @relation(fields: [farmerId], references: [id])
}

model Vehicle {
  id          Int      @id @default(autoincrement())
  numberPlate String
  ownerName   String
  score       Int?
  Demand      Demand[]
}
